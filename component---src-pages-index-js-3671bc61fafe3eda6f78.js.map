{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/pages/index.js"],"names":["BioComponent","social","useStaticQuery","site","siteMetadata","style","display","flexDirection","marginBottom","rhythm","to","href","target","twitter","BlogIndex","data","location","siteTitle","title","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","key","color","textColorYellow","backgroundColor","backgroundColorBlue","boxShadow","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"6FAAA,iDA0DeA,IA9CM,WACnB,IAYQC,EAZKC,YAAe,cAYJC,KAAKC,aAArBH,OACR,OACE,yBACEI,MAAO,CACLC,QAAQ,OACRC,cAAc,SACdC,aAAcC,YAAO,OAGvB,6BACE,kBAAC,IAAD,CAAMC,GAAE,SAAR,SAIF,6BACE,kBAAC,IAAD,CAAMA,GAAE,UAAR,UAIF,6BACE,uBAAGC,KAAI,+BAAkCC,OAAM,UAA/C,WAIF,6BACE,uBAAGD,KAAI,uBAAyBV,EAAOY,QAAWD,OAAM,UAAxD,e,kCClDR,4FAkDeE,UA1CG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAYF,EAAKZ,KAAKC,aAAac,MACnCC,EAAQJ,EAAKK,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQL,SAAUA,EAAUE,MAAOD,GACjC,kBAAC,IAAD,CAAKC,MAAM,cACX,kBAAC,IAAD,MACCC,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACErB,MAAO,CACLG,aAAcC,YAAO,EAAI,KAG3B,kBAAC,IAAD,CAAMJ,MAAO,CACTuB,MAAOb,EAAKZ,KAAKC,aAAayB,gBAC9BC,gBAAiBf,EAAKZ,KAAKC,aAAa2B,oBACxCC,UAAU,QACTtB,GAAIa,EAAKE,OAAOC,MAClBR,IAGL,+BAAQK,EAAKC,YAAYS,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc","file":"component---src-pages-index-js-3671bc61fafe3eda6f78.js","sourcesContent":["/**\n * BioComponent component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst BioComponent = () => {\n  const data = useStaticQuery(graphql`\n    query BioComponentQuery {\n      site {\n        siteMetadata {\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        flexDirection: `column`,\n        marginBottom: rhythm(1.5),\n      }}\n    >\n      <div>\n        <Link to={`/work`} >\n          work\n        </Link>\n      </div>\n      <div>\n        <Link to={`/talks`} >\n          talks\n        </Link>\n      </div>\n      <div>\n        <a href={`https://github.com/indraneel`} target={`_blank`}>\n          github\n        </a>\n      </div>\n      <div>\n        <a href={`https://twitter.com/${social.twitter}`} target={`_blank`}>\n          twitter\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default BioComponent\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport BioComponent from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <BioComponent />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{\n                    color: data.site.siteMetadata.textColorYellow,\n                    backgroundColor: data.site.siteMetadata.backgroundColorBlue,\n                    boxShadow: `none`\n                  }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title,\n        textColorYellow,\n        backgroundColorBlue,\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}