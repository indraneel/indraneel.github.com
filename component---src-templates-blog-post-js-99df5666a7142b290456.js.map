{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["BioComponent","social","useStaticQuery","site","siteMetadata","style","display","flexDirection","marginBottom","rhythm","to","href","target","twitter","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","backgroundColor","backgroundColorBlue","color","textColorYellow","marginTop","scale","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"mappings":"6FAAA,iDA0DeA,IA9CM,WACnB,IAYQC,EAZKC,YAAe,cAYJC,KAAKC,aAArBH,OACR,OACE,yBACEI,MAAO,CACLC,QAAQ,OACRC,cAAc,SACdC,aAAcC,YAAO,OAGvB,6BACE,kBAAC,IAAD,CAAMC,GAAE,SAAR,SAIF,6BACE,kBAAC,IAAD,CAAMA,GAAE,UAAR,UAIF,6BACE,uBAAGC,KAAI,+BAAkCC,OAAM,UAA/C,WAIF,6BACE,uBAAGD,KAAI,uBAAyBV,EAAOY,QAAWD,OAAM,UAAxD,e,kCClDR,4FAkFeE,UA1EU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKZ,KAAKC,aAAaiB,MACjCC,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KAElB,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,kBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,iCACE,gCACE,wBACErB,MAAO,CACLsB,gBAAiBZ,EAAKZ,KAAKC,aAAawB,oBACxCC,MAAOd,EAAKZ,KAAKC,aAAa0B,gBAC9BC,UAAWtB,YAAO,GAClBD,aAAc,IAGfU,EAAKM,YAAYH,OAEpB,uBACEhB,MAAK,iBACA2B,aAAM,IADN,CAEH1B,QAAQ,QACRE,aAAcC,YAAO,MAGtBS,EAAKM,YAAYS,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQjB,EAAKkB,QACjD,wBACE/B,MAAO,CACLG,aAAcC,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEJ,MAAO,CACLC,QAAQ,OACR+B,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGlB,GACC,kBAAC,IAAD,CAAMZ,GAAIY,EAASmB,OAAOC,KAAMC,IAAI,QAApC,KACKrB,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,IAAD,CAAMb,GAAIa,EAAKkB,OAAOC,KAAMC,IAAI,QAC7BpB,EAAKC,YAAYH,MADpB","file":"component---src-templates-blog-post-js-99df5666a7142b290456.js","sourcesContent":["/**\n * BioComponent component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst BioComponent = () => {\n  const data = useStaticQuery(graphql`\n    query BioComponentQuery {\n      site {\n        siteMetadata {\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        flexDirection: `column`,\n        marginBottom: rhythm(1.5),\n      }}\n    >\n      <div>\n        <Link to={`/work`} >\n          work\n        </Link>\n      </div>\n      <div>\n        <Link to={`/talks`} >\n          talks\n        </Link>\n      </div>\n      <div>\n        <a href={`https://github.com/indraneel`} target={`_blank`}>\n          github\n        </a>\n      </div>\n      <div>\n        <a href={`https://twitter.com/${social.twitter}`} target={`_blank`}>\n          twitter\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default BioComponent\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport BioComponent from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              backgroundColor: data.site.siteMetadata.backgroundColorBlue,\n              color: data.site.siteMetadata.textColorYellow,\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <BioComponent />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title,\n        backgroundColorBlue,\n        textColorYellow,\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}